pipeline {
    agent any
    environment {
        AWS_REGION = 'ap-south-1'
        ECR_API_URL = '934556830376.dkr.ecr.ap-south-1.amazonaws.com/url-shortener-api'
        ECR_FRONTEND_URL = '934556830376.dkr.ecr.ap-south-1.amazonaws.com/url-shortener-frontend'
        KUBE_CONFIG = credentials('kubeconfig')
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', credentialsId: 'github-ssh', url: 'git@github.com:Prajwal299/url_shortner.git'
            }
        }
        stage('Build') {
            steps {
                sh 'docker build -t :latest ./app'
                sh 'docker build -t :latest ./frontend'
            }
        }
        stage('Push') {
            steps {
                sh '''
                aws ecr get-login-password --region  | docker login --username AWS --password-stdin 934556830376.dkr.ecr.ap-south-1.amazonaws.com
                docker push :latest
                docker push :latest
                '''
            }
        }
        stage('Deploy') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
                    sh '''
                    kubectl --kubeconfig= apply -f k8s/namespace.yaml
                    kubectl --kubeconfig= apply -f k8s/mysql-deployment.yaml
                    kubectl --kubeconfig= apply -f k8s/api-deployment.yaml
                    kubectl --kubeconfig= apply -f k8s/frontend-deployment.yaml
                    kubectl --kubeconfig= rollout restart deployment/api -n url-shortener
                    kubectl --kubeconfig= rollout restart deployment/frontend -n url-shortener
                    '''
                }
            }
        }
    }
}
